#!/usr/bin/env bash
set -e

source /assets/lib.sh

if [ -z "${MAXIMUM_MEMORY}" ]; then
    log "WARNING: define MAXIMUM_MEMORY to set the maximum_memory setting in the SingleStore DB node"
fi
if [ -z "${ROOT_PASSWORD}" ]; then
    log "WARNING: define ROOT_PASSWORD to set a root password"
fi

# ensure that the nodes db exists
touch /var/lib/memsql/nodes.hcl
touch /var/lib/memsql/nodes.hcl.lock

# ensure a node is created
once /var/lib/memsql/.node-lock createNode

if [ -n "${ENABLE_SSL}" ]; then
    enableSSL
fi

# set the nodes' maximum memory if needed
setMaximumMemory "${MAXIMUM_MEMORY}"

setJava11Path
setJava21Path

# if a pre-start script is defined in the environment, and the file exists + is
# executable, run the file before starting SingleStore DB
if [ -n "${PRE_START_SCRIPT}" ]; then
    if [ -x "${PRE_START_SCRIPT}" ]; then
        echo "Running pre-start script: ${PRE_START_SCRIPT}"
        ${PRE_START_SCRIPT}
    else
        log "WARNING: PRE_START_SCRIPT is set to non-executable file"
    fi
fi

trap 'log "Stopping singlestore ($PID)..."; kill $PID; wait $PID; exit 0' SIGTERM

# start SingleStore DB in the background
startSingleStore; PID=$!
waitStart $PID
log "Started singlestore ($PID)"


# ensure the root password is configured correctly
updateRootPassword "${ROOT_PASSWORD}"

# block on SingleStore DB
wait $PID
